---
lastUpdate: 2016-08-02
layout: layout.jade
---

section.projects-section#projects
  .container
    .row
      .col-lg-12
        h1 Projects
        p.
          Here are some of the things the group has been working on.

        h2 Middleware NPM Modules
        p.
          Most of Red Hat's middleware products expose RESTful APIs of some
          sort or another. Bucharest Gold has been identifying projects
          that need assistance in this area and developing or assisting with
          the project’s NPM client modules. We are attempting to promote
          consistent code style and build processes across teams for Node.js
          based components.

        p.
          To date, we have created or assisted with the following projects.

        ul
          li
            a(href='https://www.npmjs.com/package/keycloak-auth-utils') Keycloak Auth Utils
          li
            a(href='https://www.npmjs.com/package/keycloak-connect') Keycloak Connect
          li
            a(href='https://www.npmjs.com/package/keycloak-request-token') Keycloak Request Token
          li
            a(href='https://www.npmjs.com/package/keycloak-client-registration') Keycloak Client Registration
          li
            a(href='https://www.npmjs.com/package/keycloak-admin-client') Keycloak Admin Client
          li
            a(href='https://www.npmjs.com/package/drools-kie-client') Drools KIE Client
          li
            a(href='https://www.npmjs.com/package/apiman-admin-client') API Man Admin Client
          li
            a(href='https://www.npmjs.com/package/unifiedpush-registration-client') Unified Push Registration Client
          li
            a(href='https://www.npmjs.com/package/unifiedpush-admin-client') Unified Push Admin Client
          li
            a(href='https://www.npmjs.com/package/unifiedpush-node-sender') Unified Push Node Sender
          li
            a(href='https://www.npmjs.com/package/infinispan') The Infinispan client

        p.
          Currently underway is exploration with Hawkular’s API, identifying areas of
          potential integration beyond a REST client. An initial goal is to use currently
          unpublished, but moving towards production, tracing capabilities
          in Node.js to feed instrumentation data to Hawkular and exposing it via the
          Business Transaction Management API.
          This effort will also naturally result in a REST client as well.
        p.
          A few side projects have grown so far from our internal development needs.

        ul
          li
            a(href='https://www.npmjs.com/package/fidelity') Fidelity - a Promise/A+ compliant module
          li
            a(href='https://www.npmjs.com/package/roi') ROI - a dependency-free http module
          li
            a(href='https://www.nprmjs.com/package/lightbright') Lightbright - a lightweight module for code tracing

        h2 Coordinate with RHEL Software Collections
        p.
          The release cadence for Node.js has increased significantly and shows no sign of slowing.
          Node 6.x is current, while Node.js 7.0 is expected in October 2016. The next LTS release,
          version 8.0, is expected in April 2017. Software Collections have recently released a
          Node 4.x package to some relief, but to remain current, we need to work with RHEL
          Software Collections to find a process for regular updates.

        h2 OpenShift
        p.
          One goal is “Make OpenShift a great place for Node.js”. Helio has been experimenting
          with the CDK, OpenShift 3, and small Node.js projects to identify points of weakness
          or difficulty. See: https://github.com/bucharest-gold/entente/issues/8

section.people-section#people
  .container
    .row
      .col-lg-12
        h2 Bucharest Gold People
        div.
          Here is some stuff about our group and what we are doing
        div= people
